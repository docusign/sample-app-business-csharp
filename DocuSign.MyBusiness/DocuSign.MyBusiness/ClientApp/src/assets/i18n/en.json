{
  "Title": "Business Sample App",
  "Logout": "Logout",
  "GitHubSource": "GitHub Source",
  "AdminPage":  "Admin",
  "Copyright": "© 2024 Docusign Inc.",
  "WelcomeHeader": "Welcome to<br>the Business Sample App",
  "WelcomeDescription": "Self-service Business Operations Portal",
  "WelcomeStepDescription": "Step 1: Connect to a Docusign account. The retrieved token will be used throughout the session for the user's actions",
  "LoginWithDocuSignAccountButton": "Log in with your Docusign account",
  "LoginWithTestAccountButton": "Log in with a test account",
  "ConnectAccountButton": "Connect your Docusign Account",
  "UseDemoAccountButton": "Use Our Demonstration Account",
  "StartTrialAccountButton": "Start Your Free Trial",
  "GetStarted": "Get started - connect your Docusign account",
  "Note": "<strong>Note</strong><br> This sample<br> app is written<br>in <strong>C#</strong>",
  "SetupButton": "Setup",
  "VSExtentionLink": "Get the Visual Studio Extension",
  "VSCodeExtentionLink": "Get the Visual Studio Code Extension",
  "SelectTitle": "Select",
  "InfoHeader": {
    "Part1": "Docusign:",
    "Part2": "It’s time to agree better"
  },
  "InfoDescription": "Docusign helps organizations connect and automate how they prepare, sign, act on and manage agreements.",
  "SandBoxButton": "Create developer account",
  "LearnMoreButton": "Learn more",
  "Admin": {
    "Header": "Admin Setup"
  },
  "Actions": {
    "ActionsTitle": "Use Case Scenarios",
    "InitiateButton": "Initiate",
    "EmploymentContractTitle": "Send an Employment Contract",
    "EmploymentContractDescription": "Send an Employment Contract to a new hire",
    "EmploymentContractFeature1": "Composite templates",
    "EmploymentContractFeature2": "Envelope-level Connect notifications",
    "EmploymentContractFeature3": "Electronic or digital signature options (SBS)",
    "EmploymentContractFeature4": "Embedded sending",
    "EmploymentContractFeature5": "Remote signing via email notification",
    "TermsAndConditionsTitle": "T&Cs and Contract",
    "TermsAndConditionsDescription": "Send a standard Terms and Conditions document along with a Contract document to an external buyer",
    "TermsAndConditionsFeature1": "Composite templates",
    "TermsAndConditionsFeature2": "Envelope-level Connect notifications",
    "TermsAndConditionsFeature3": "Prepopulated field data",
    "TermsAndConditionsFeature4": "Recipient Authentication with Access Code",
    "UpdateProfileTitle": "Update Customer Profile Self-service",
    "UpdateProfileDescription": "Provide a means for customers to update their profile",
    "UpdateProfileFeature1": "Composite templates",
    "UpdateProfileFeature2": "Envelope-level Connect notifications",
    "UpdateProfileFeature3": "Embedded signing with login data mapped to security elements",
    "UpdateProfileFeature4": "IDV or SMS/Phone authentication",
    "CustomQuoteTitle": "Custom Quote",
    "CustomQuoteDescription": "Send a generated custom quote to a prospective buyer",
    "CustomQuoteFeature1": "Composite templates with anchor tabs",
    "CustomQuoteFeature2": "Envelope-level Connect notifications",
    "CustomQuoteFeature3": "Remote signing via SMS delivery"
  },
  "Links": {
    "CompositeTemplates": "Composite Templates",
    "Connect": "Docusign Connect",
    "ESignature": "C# eSignature SDK",
    "ISV": "ISV FAQs"
  },
  "AdminForm": {
    "BaseUrlField": "Base URI",
    "BasePathField": "Base Path",
    "AccountIdField": "Account ID",
    "UserIdField": "User ID",
    "FirstNamePlaceholder": "First Name",
    "LastNamePlaceholder": "Last Name",
    "FullNamePlaceholder": "Full Legal Name",
    "EmailField": "Email",
    "MobilePhoneField": "Mobile Phone",
    "AuthorizeButton": "Authorize",
    "ConsentButton": "Grant Consent",
    "ConsentAdminButton": "Grant Consent As Admin",
    "ConsentGrantedButton": "Consent Granted",
    "AuthorizeAsAdminButton": "Authorize as admin",
    "AuthorizeAsIndividualButton": "Authorize as individual",
    "ConnectButton": "Connect Account",
    "ConnectingButton": "Connecting...",
    "ConnectedButton": "Connected",
    "DisconnectButton": "Disconnect",
    "SaveButton": "Save and Continue to User Actions",
    "TemplateLabel": "Document Template",
    "SignatureLabel": "Signature Type",
    "AccountsLabel": "Accounts List",
    "Text1": "If you have a claimed domain and you are a Docusign Admin (Organization), then you can authorize the entire domain of users by using Grant Consent As Admin. Otherwise, you are consenting as an Individual.",
    "Text2": "After you grant consent in Step 1, the information here will be used to get an access token for the given user ID and to make API calls to the given account.",
    "Text3": "Details used for the Update Customer Profile Self-service use case.",
    "Step1": "<span><span class='title-bold'>Step 1: </span>The Business Sample App requires your consent to act on your behalf in the given Docusign account. Please choose the environment (Demo or Production) for the Docusign account you wish to connect.</span>",
    "Step2": "<span><span class='title-bold'>Step 2: </span>Select the account and user ID to connect to the Business Sample App. The information here can be checked against the Apps and Keys page in Admin for your Docusign account.",
    "Step3": "<span><span class='title-bold'>Step 3: </span>Customer Profile",
    "GetFreeTrial": "Don't have Docusign yet? Get a Free Trial to try the integration!"
  },
  "ErrorMessages": {
    "GeneralErrors": {
      "invalid_base_path": "Please add correct Base Path",
      "invalid_base_uri": "Please add correct Base URI",
      "invalid_account": "Please add correct Account ID",
      "invalid_grant": "Please add correct User ID",
      "invalid_phone_number": "Please add correct Phone Number",
      "invalid_authentication": "Please add correct Login and Password",
      "invalid_password": "Please add correct Password"
    },
    "FieldErrors": {
      "invalid_base_path": "Invalid Base Path",
      "invalid_base_url": "Invalid Url",
      "invalid_account": "Invalid Account ID",
      "invalid_grant": "Invalid User ID",
      "invalid_phone_number": "Invalid Phone Number",
      "invalid_user": "Invalid Login",
      "invalid_password": "Invalid Password"
    }
  },
  "UseCases": {
    "SendToTitle": "Send to",
    "CopytoClipboardButton": "Copy to Clipboard",
    "AccessCodeTitle": "Access Code",
    "SendNowButton": "Send Now",
    "DetailsButton": "Details About Scenario",
    "FirstNamePlaceholder": "First Name",
    "LastNamePlaceholder": "Last Name",
    "EmailPlaceholder": "Email",
    "LoginPlaceholder": "Login",
    "PasswordPlaceholder": "Password",
    "AccessCodePlaceholder": "Access Code",
    "CcFullNamePlaceholder": "Cc Full Name"
  },
  "UseCase1": {
    "EmploymentContractTitle": "Send an Employment Contract",
    "EmploymentContractDescription": "This use case presents a scenario wherein the ISV’s app enables an employee to send an Employment Contract to a new hire.",
    "EmploymentContractOption1": "Composite templates",
    "EmploymentContractOption2": "Envelope-level Connect notifications",
    "EmploymentContractOption3": "Electronic or digital signature options (SBS) offered, based on account in use",
    "EmploymentContractOption4": "Embedded sending",
    "EmploymentContractOption5": "Remote signing via email notification",
    "EmploymentContractEnvelopeSettings": "Envelope settings",
    "ReviewAndSendButton": "Review & Send",
    "CodeFlow": "View source file <a target='_blank' rel='noopener noreferrer' href='https://github.com/docusign/sample-app-business-csharp/blob/main/DocuSign.MyBusiness/DocuSign.MyBusiness/Domain/EmploymentContract/Services/EmploymentContractEnvelopeService.cs'>EmploymentContractEnvelopeService.cs</a> on GitHub.<br><br><h6>Code flow:</h6><span><b>Step 1</b></span><p>When the page loads, the <a target='_blank' rel='noopener noreferrer' href='https://developers.docusign.com/docs/esign-rest-api/reference/templates/templates/list/'>Templates:list</a> method is called on the authenticated user’s account to populate the Document Template list. This list includes a “Default” option, which refers to an Employment Contract template. If selected, this template is automatically created in the authenticated user’s account. Alternatively, the user can select any existing template from their account. <br> Additionally, the <a target='_blank' rel='noopener noreferrer' href='https://developers.docusign.com/docs/esign-rest-api/reference/accounts/accountsignatureproviders/list/'>AccountSignatureProviders:list</a>  method is called to populate the Signature Type list. The “Default” option here refers to standard Docusign electronic signatures, unless <a target='_blank' rel='noopener noreferrer' href='https://developers.docusign.com/docs/esign-rest-api/esign101/concepts/standards-based-signatures/'>Standards Based Signatures</a> are configured for the account.</p><span><b>Step 2</b></span><p>When either <b>Send Now</b> or <b>Review & Send</b> is selected, the appropriate template ID is retrieved from the Document Template list. An envelope definition is then created using the <a target='_blank' rel='noopener noreferrer' href='https://developers.docusign.com/docs/esign-rest-api/esign101/concepts/templates/composite/'>composite templates</a> feature, allowing dynamic customization of the signature type and recipient details based on user input. Finally, the envelope is created using the <a target='_blank' rel='noopener noreferrer' href='https://developers.docusign.com/docs/esign-rest-api/reference/Envelopes/Envelopes/create'>Envelopes:create</a> method, with its <a target='_blank' rel='noopener noreferrer' href='https://developers.docusign.com/docs/esign-rest-api/esign101/concepts/envelopes/status-codes/'>status</a> property set to either <code>sent</code> or <code>draft</code>, depending on the selected action.</p><span><b>Step 3</b></span><p>If the <b>Review and Send</b> action is selected, the app generates a <a target='_blank' rel='noopener noreferrer' href='https://github.com/docusign/sample-app-business-csharp/blob/82f775073a5c54d570155f9bd6f0bb2781160a5a/DocuSign.MyBusiness/DocuSign.MyBusiness/Domain/EmploymentContract/Services/EmploymentContractEnvelopeService.cs#L54'>Sender View</a> using the <a target='_blank' rel='noopener noreferrer' href='https://developers.docusign.com/docs/esign-rest-api/reference/envelopes/envelopeviews/createsender/'>EnvelopeViews: createSender</a> method. This method returns a URL to which the app redirects, enabling the user to access the <a target='_blank' rel='noopener noreferrer' href='https://developers.docusign.com/docs/esign-rest-api/esign101/concepts/embedding/embed-sender-correct-views/'>embedded sending</a> feature. From there, the user can customize and modify the envelope draft before sending it. If <b>Send Now</b> is selected, the envelope will be sent immediately.</p><span><b>Step 4</b></span><p>Envelope lifecycle events will be passed to the application via Connect per the <a target='_blank' rel='noopener noreferrer' href='https://github.com/docusign/sample-app-business-csharp/blob/82f775073a5c54d570155f9bd6f0bb2781160a5a/DocuSign.MyBusiness/DocuSign.MyBusiness/Domain/EmploymentContract/Services/EmploymentContractEnvelopeBuilder.cs#L67'>EmploymentContractEnvelopeBuilder:ConfigureEventNotifications</a> method, resulting in a notification bubble shown on the right-hand side."
  },

  "UseCase2": {
    "TermsAndConditionsTitle": "T&Cs and Contract",
    "TermsAndConditionsDescription": "This use case presents a scenario in which a sales employee is sending a standard Terms and Conditions document along with a Contract document to an external buyer",
    "TermsAndConditionsOption1": "Composite templates",
    "TermsAndConditionsOption2": "Envelope-level Connect notifications",
    "TermsAndConditionsOption3": "Prepopulated field data",
    "TermsAndConditionsOption4": "Recipient Authentication with Access Code",
    "TermsAndConditionsAccessCodeDescription": "Provide the Access Code to the Signer by some other channel",
    "CcEmailTitle": "CC Email",
    "CcFullNameTitle": "CC Full Name",
    "CodeFlow": "View source file <a target='_blank' rel='noopener noreferrer' href='https://github.com/docusign/sample-app-business-csharp/blob/main/DocuSign.MyBusiness/DocuSign.MyBusiness/Domain/TermsAndConditions/Services/TermsAndConditionsEnvelopeService.cs'>TermsAndConditionsEnvelopeService.cs</a> on GitHub.<br><br><h6>Code flow:</h6><span><b>Step 1</b></span><p>The page form provides fields for a signer and for a carbon copy recipient. It also generates an access code, providing an easy copy-to-clipboard button. This code would be delivered to the signer via a different channel. <br>Because this app can be connected to anyone’s developer account, the <a target='_blank' rel='noopener noreferrer' href='https://developers.docusign.com/docs/esign-rest-api/reference/templates/templates/list/'>Templates:list</a> method is called on the account to check for the existence of the designed templates. If those templates are not present, the app will create these templates in the authenticated user’s account.</p><span><b>Step 2</b></span><p>Selecting <b>Send Now</b> prompts the app to begin constructing an envelope (<a target='_blank' rel='noopener noreferrer' href='https://github.com/docusign/sample-app-business-csharp/blob/main/DocuSign.MyBusiness/DocuSign.MyBusiness/Controllers/TermsAndConditions/TermsAndConditionsController.cs'>TermsAndConditionsController.cs</a>), passing in the recipient information. The builder (<a target='_blank' rel='noopener noreferrer' href='https://github.com/docusign/sample-app-business-csharp/blob/main/DocuSign.MyBusiness/DocuSign.MyBusiness/Domain/TermsAndConditions/Services/TermsAndConditionsEnvelopeBuilder.cs'>TermsAndConditionsEnvelopeBuilder.cs</a>) then assembles the envelope using the <a target='_blank' rel='noopener noreferrer' href='https://developers.docusign.com/docs/esign-rest-api/esign101/concepts/templates/composite/'>composite template</a> model, with a template for the terms and conditions document (as a supplemental document) and a template for the contract document. The application then immediately sends the envelope to the specified recipient.</p><span><b>Step 3</b></span><p>Envelope lifecycle events will be passed to the application via Connect per the <a target='_blank' rel='noopener noreferrer' href='https://github.com/docusign/sample-app-business-csharp/blob/82f775073a5c54d570155f9bd6f0bb2781160a5a/DocuSign.MyBusiness/DocuSign.MyBusiness/Domain/TermsAndConditions/Services/TermsAndConditionsEnvelopeBuilder.cs#L154'>TermsAndConditionsEnvelopeBuilder:ConfigureEventNotifications</a> method, resulting in a notification bubble shown on the right-hand side.</p>"
  },
  "UseCase3": {
    "UpdateProfileTitle": "Update Customer Profile Self-service",
    "UpdateProfileDescription": "This use case presents a scenario in which an online customer portal provides a means for customers to update their profiles. The app requires password authentication. As an added level of security, the embedded signing session will require that the signer pass an IDV check.",
    "UpdateProfileOption1": "Composite templates",
    "UpdateProfileOption2": "Envelope-level Connect notifications",
    "UpdateProfileOption3": "Embedded signing with login data mapped to security elements",
    "UpdateProfileOption4": "IDV or SMS/Phone authentication",
    "UpdateProfileAuthorizeTitle": "Login required to proceed to User Profile page<br>(Simulated login - use values login and password)",
    "UpdateProfileAuthorizeButton": "Authorize",
    "UpdateProfileAuthorizationButton": "Authorization...",
    "UpdateProfileEditButton": "Edit Profile",
    "CodeFlow": "View source file <a target='_blank' rel='noopener noreferrer' href='https://github.com/docusign/sample-app-business-csharp/blob/main/DocuSign.MyBusiness/DocuSign.MyBusiness/Domain/CustomerProfile/Services/CustomerProfileEnvelopeService.cs'>CustomerProfileEnvelopeService.cs</a> on GitHub.<br><br><h6>Code flow:</h6><span><b>Step 1</b></span><p>Once the customer has successfully logged in to the self-service portal, the app calls the <a target='_blank' rel='noopener noreferrer' href='https://developers.docusign.com/docs/esign-rest-api/reference/templates/templates/list/'>templates:list</a> method on the authenticated user’s account to check for the Profile Update template. If this template is not present, the app creates such a template in the account. </p><span><b>Step 2</b></span><p>Selecting <b>Edit Profile</b> will trigger the app to create an envelope (<a target='_blank' rel='noopener noreferrer' href='https://github.com/docusign/sample-app-business-csharp/blob/main/DocuSign.MyBusiness/DocuSign.MyBusiness/Domain/CustomerProfile/Services/CustomerProfileEnvelopeBuilder.cs'>CustomerProfileEnvelopeBuilder.cs</a>), which will in turn use the <a target='_blank' rel='noopener noreferrer' href='https://developers.docusign.com/docs/esign-rest-api/how-to/id-verification/'>ID verification workflow ID</a> for the sending account in use (see <a target='_blank' rel='noopener noreferrer' href='https://github.com/docusign/sample-app-business-csharp/blob/82f775073a5c54d570155f9bd6f0bb2781160a5a/DocuSign.MyBusiness/DocuSign.MyBusiness/Domain/CustomerProfile/Services/CustomerProfileEnvelopeBuilder.cs#L158'>CustomerProfileEnvelopeBuilder.CreateIdentityVerificationInputOptions()</a>).</p><span><b>Step 3</b></span><p>The user is prompted to verify their identity using IDV (or SMS/Phone Auth if IDV is not supported, or an error message is displayed if the account doesn’t support either method) before entering the embedded signing session.</p><span><b>Step 4</b></span><p>The user is presented with the embedded signing view, with prepopulated tab data. The user can update the data, sign, and then complete the envelope.  When the envelope is completed, the browser is redirected to the Business Sample App and a notification bubble is shown on the right-hand side, reflecting the envelope data.</p>"
  },
  "UseCase4": {
    "CustomQuoteTitle": "Custom Quote",
    "CustomQuoteDescription": "This use case presents a scenario in which a sales employee is sending a generated custom quote to a prospective buyer.",
    "CustomQuoteOption1": "Composite templates with anchor tabs",
    "CustomQuoteOption2": "Envelope-level Connect notifications",
    "CustomQuoteOption3": "Remote signing via SMS delivery",
    "CustomQuoteProvideNumberTitle": "Provide the Signer’s phone number for SMS notification",
    "CustomQuoteCountryCodeLabel": "Country code",
    "CustomQuotePhoneNumberLabel": "Phone number",
    "CodeFlow": "View source file <a target='_blank' rel='noopener noreferrer' href='https://github.com/docusign/sample-app-business-csharp/blob/main/DocuSign.MyBusiness/DocuSign.MyBusiness/Domain/CustomQuote/Services/CustomQuoteEnvelopeService.cs'>CustomQuoteEnvelopeService.cs</a> on GitHub.<br><br><h6>Code flow:</h6><span><b>Step 1</b></span><p>The page form provides fields for a signer’s name and mobile phone number. When <b>Send Now</b> is selected, the <a target='_blank' rel='noopener noreferrer' href='https://github.com/docusign/sample-app-business-csharp/blob/main/DocuSign.MyBusiness/DocuSign.MyBusiness/Controllers/CustomQuote/CustomQuoteController.cs'>CustomQuoteController</a> passes the account ID and signer information to the <a target='_blank' rel='noopener noreferrer' href='https://github.com/docusign/sample-app-business-csharp/blob/main/DocuSign.MyBusiness/DocuSign.MyBusiness/Domain/CustomQuote/Services/CustomQuoteEnvelopeService.cs'>CustomQuoteEnvelopeService:CreateCustomEnvelope</a> method.</p><span><b>Step 2</b></span><p>A builder (<a target='_blank' rel='noopener noreferrer' href='https://github.com/docusign/sample-app-business-csharp/blob/main/DocuSign.MyBusiness/DocuSign.MyBusiness/Domain/CustomQuote/Services/CustomQuoteEnvelopeBuilder.cs#L10'>CustomQuoteEnvelopeBuilder</a>) then constructs the envelope using the provided signer information. The envelope is created following the <a target='_blank' rel='noopener noreferrer' href='https://developers.docusign.com/docs/esign-rest-api/esign101/concepts/templates/composite/'>composite template</a> model. The document is provided, simulating a generated quote. An inline template provides the details of the signer, including the necessary signer parameters for SMS delivery and envelope custom field metadata, and adds tabs to be placed via <a target='_blank' rel='noopener noreferrer' href='https://developers.docusign.com/docs/esign-rest-api/esign101/concepts/tabs/auto-place/'>auto-place</a> (anchor tagging). Docusign will handle the delivery to the signer via SMS.</p><span><b>Step 3</b></span><p>Envelope lifecycle events will be passed to the application via Connect per the <a target='_blank' rel='noopener noreferrer' href='https://github.com/docusign/sample-app-business-csharp/blob/82f775073a5c54d570155f9bd6f0bb2781160a5a/DocuSign.MyBusiness/DocuSign.MyBusiness/Domain/CustomQuote/Services/CustomQuoteEnvelopeBuilder.cs#L113'>CustomQuoteEnvelopeBuilder:ConfigureEventNotifications</a> method, resulting in a notification bubble shown on the right-hand side.</p>"
  },
  "CancelButton": "Cancel",
  "ErrorText": "Please fill out this field.",
  "ErrorInvalidText": "This field is incorrect."
}
